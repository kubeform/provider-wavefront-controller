/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Alert struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AlertSpec   `json:"spec,omitempty"`
	Status            AlertStatus `json:"status,omitempty"`
}

type AlertSpec struct {
	State *AlertSpecResource `json:"state,omitempty" tf:"-"`

	Resource AlertSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type AlertSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AdditionalInformation *string `json:"additionalInformation,omitempty" tf:"additional_information"`
	// +optional
	AlertType *string `json:"alertType,omitempty" tf:"alert_type"`
	// +optional
	CanModify []string `json:"canModify,omitempty" tf:"can_modify"`
	// +optional
	CanView []string `json:"canView,omitempty" tf:"can_view"`
	// +optional
	Condition *string `json:"condition,omitempty" tf:"condition"`
	// +optional
	Conditions *map[string]string `json:"conditions,omitempty" tf:"conditions"`
	// +optional
	DisplayExpression *string `json:"displayExpression,omitempty" tf:"display_expression"`
	Minutes           *int64  `json:"minutes" tf:"minutes"`
	Name              *string `json:"name" tf:"name"`
	// +optional
	NotificationResendFrequencyMinutes *int64 `json:"notificationResendFrequencyMinutes,omitempty" tf:"notification_resend_frequency_minutes"`
	// +optional
	ResolveAfterMinutes *int64 `json:"resolveAfterMinutes,omitempty" tf:"resolve_after_minutes"`
	// +optional
	Severity *string  `json:"severity,omitempty" tf:"severity"`
	Tags     []string `json:"tags" tf:"tags"`
	// +optional
	Target *string `json:"target,omitempty" tf:"target"`
	// +optional
	ThresholdTargets *map[string]string `json:"thresholdTargets,omitempty" tf:"threshold_targets"`
}

type AlertStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AlertList is a list of Alerts
type AlertList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Alert CRD objects
	Items []Alert `json:"items,omitempty"`
}
