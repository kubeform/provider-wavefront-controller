/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type IntegrationCloudtrail struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              IntegrationCloudtrailSpec   `json:"spec,omitempty"`
	Status            IntegrationCloudtrailStatus `json:"status,omitempty"`
}

type IntegrationCloudtrailSpec struct {
	State *IntegrationCloudtrailSpecResource `json:"state,omitempty" tf:"-"`

	Resource IntegrationCloudtrailSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type IntegrationCloudtrailSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AdditionalTags *map[string]string `json:"additionalTags,omitempty" tf:"additional_tags"`
	BucketName     *string            `json:"bucketName" tf:"bucket_name"`
	ExternalID     *string            `json:"externalID" tf:"external_id"`
	// +optional
	FilterRule *string `json:"filterRule,omitempty" tf:"filter_rule"`
	// +optional
	ForceSave *bool   `json:"forceSave,omitempty" tf:"force_save"`
	Name      *string `json:"name" tf:"name"`
	// +optional
	Prefix  *string `json:"prefix,omitempty" tf:"prefix"`
	Region  *string `json:"region" tf:"region"`
	RoleArn *string `json:"roleArn" tf:"role_arn"`
	Service *string `json:"service" tf:"service"`
	// +optional
	ServiceRefreshRateInMinutes *int64 `json:"serviceRefreshRateInMinutes,omitempty" tf:"service_refresh_rate_in_minutes"`
}

type IntegrationCloudtrailStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// IntegrationCloudtrailList is a list of IntegrationCloudtrails
type IntegrationCloudtrailList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of IntegrationCloudtrail CRD objects
	Items []IntegrationCloudtrail `json:"items,omitempty"`
}
